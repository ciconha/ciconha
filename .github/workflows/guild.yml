name: 🏰 Guild Card Compact

on:
  workflow_dispatch:
    inputs:
      usuario:
        description: "Usuário do GitHub"
        required: true
        default: "ciconha"

permissions:
  contents: write

jobs:
  gerar-cartao-compact:
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ github.event.inputs.usuario }}
    
    steps:
      - name: 🧩 Checkout do repositório
        uses: actions/checkout@v4

      - name: 📦 Instalar dependências
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: 🔍 Buscar dados do GitHub
        id: fetch-data
        run: |
          USER="${{ env.USERNAME }}"
          echo "🔍 Coletando dados para: $USER"

          # Dados básicos do usuário
          curl -s "https://api.github.com/users/$USER" > user.json
          
          # Repositórios ordenados por stars (sem auth para evitar limites)
          curl -s "https://api.github.com/users/$USER/repos?sort=stars&per_page=10&type=all" > repos.json
          
          # Eventos para commits
          curl -s "https://api.github.com/users/$USER/events?per_page=50" > events.json

          # Processar dados básicos
          LOGIN=$(jq -r '.login' user.json)
          AVATAR=$(jq -r '.avatar_url' user.json)
          NAME=$(jq -r '.name // .login' user.json)
          REPOS=$(jq -r '.public_repos' user.json)
          FOLLOWERS=$(jq -r '.followers' user.json)
          FOLLOWING=$(jq -r '.following' user.json)

          # Calcular métricas de contribuição
          COMMITS=$(jq '[.[] | select(.type=="PushEvent")] | length' events.json)
          PRS=$(jq '[.[] | select(.type=="PullRequestEvent")] | length' events.json)
          ISSUES=$(jq '[.[] | select(.type=="IssuesEvent")] | length' events.json)

          # Buscar os 2 projetos mais populares
          jq 'sort_by(-.stargazers_count) | [.[0], .[1]]' repos.json > top_repos.json

          # Dados do projeto 1
          REPO1_NAME=$(jq -r '.[0].name // "N/A"' top_repos.json)
          REPO1_STARS=$(jq -r '.[0].stargazers_count // 0' top_repos.json)
          REPO1_FORKS=$(jq -r '.[0].forks_count // 0' top_repos.json)
          REPO1_LANG=$(jq -r '.[0].language // "N/A"' top_repos.json)

          # Dados do projeto 2
          REPO2_NAME=$(jq -r '.[1].name // "N/A"' top_repos.json)
          REPO2_STARS=$(jq -r '.[1].stargazers_count // 0' top_repos.json)
          REPO2_FORKS=$(jq -r '.[1].forks_count // 0' top_repos.json)
          REPO2_LANG=$(jq -r '.[1].language // "N/A"' top_repos.json)

          # Calcular XP baseado em múltiplos fatores
          REPO_XP=$((REPOS * 25))
          SOCIAL_XP=$((FOLLOWERS * 15 + FOLLOWING * 5))
          CONTRIB_XP=$((COMMITS * 2 + PRS * 8 + ISSUES * 5))
          STAR_XP=$(( (REPO1_STARS + REPO2_STARS) * 3 ))
          
          TOTAL_XP=$((REPO_XP + SOCIAL_XP + CONTRIB_XP + STAR_XP))
          
          # Sistema de level simplificado
          if [ $TOTAL_XP -lt 500 ]; then
            LEVEL=1
            RANK="🌱 Iniciante"
          elif [ $TOTAL_XP -lt 1500 ]; then
            LEVEL=2
            RANK="🚀 Programador"
          elif [ $TOTAL_XP -lt 3000 ]; then
            LEVEL=3
            RANK="💻 Avançado"
          elif [ $TOTAL_XP -lt 6000 ]; then
            LEVEL=4
            RANK="🔥 Expert"
          elif [ $TOTAL_XP -lt 10000 ]; then
            LEVEL=5
            RANK="⚡ Mestre"
          else
            LEVEL=6
            RANK="🏆 Lenda"
          fi

          # Calcular progresso (0-100%)
          case $LEVEL in
            1) LEVEL_MAX=500 ;;
            2) LEVEL_MAX=1500 ;;
            3) LEVEL_MAX=3000 ;;
            4) LEVEL_MAX=6000 ;;
            5) LEVEL_MAX=10000 ;;
            6) LEVEL_MAX=99999 ;;
          esac

          case $LEVEL in
            1) LEVEL_MIN=0 ;;
            2) LEVEL_MIN=500 ;;
            3) LEVEL_MIN=1500 ;;
            4) LEVEL_MIN=3000 ;;
            5) LEVEL_MIN=6000 ;;
            6) LEVEL_MIN=10000 ;;
          esac

          LEVEL_RANGE=$((LEVEL_MAX - LEVEL_MIN))
          CURRENT_PROGRESS=$((TOTAL_XP - LEVEL_MIN))
          XP_PERCENTAGE=$((CURRENT_PROGRESS * 100 / LEVEL_RANGE))

          # Garantir que não passe de 100%
          if [ $XP_PERCENTAGE -gt 100 ]; then
            XP_PERCENTAGE=100
          fi

          echo "=== DADOS COLETADOS ==="
          echo "👤 $NAME (@$LOGIN)"
          echo "📊 $REPOS repositórios, $FOLLOWERS seguidores"
          echo "💻 $COMMITS commits, $PRS PRs, $ISSUES issues"
          echo "🎯 Nível $LEVEL ($RANK) - $XP_PERCENTAGE%"
          echo "⭐ Top projetos: $REPO1_NAME ($REPO1_STARS★), $REPO2_NAME ($REPO2_STARS★)"

          # Exportar para outputs
          echo "login=$LOGIN" >> $GITHUB_OUTPUT
          echo "avatar=$AVATAR" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "repos=$REPOS" >> $GITHUB_OUTPUT
          echo "followers=$FOLLOWERS" >> $GITHUB_OUTPUT
          echo "following=$FOLLOWING" >> $GITHUB_OUTPUT
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT
          echo "prs=$PRS" >> $GITHUB_OUTPUT
          echo "issues=$ISSUES" >> $GITHUB_OUTPUT
          echo "total_xp=$TOTAL_XP" >> $GITHUB_OUTPUT
          echo "level=$LEVEL" >> $GITHUB_OUTPUT
          echo "rank=$RANK" >> $GITHUB_OUTPUT
          echo "xp_percentage=$XP_PERCENTAGE" >> $GITHUB_OUTPUT
          echo "level_max=$LEVEL_MAX" >> $GITHUB_OUTPUT
          echo "repo1_name=$REPO1_NAME" >> $GITHUB_OUTPUT
          echo "repo1_stars=$REPO1_STARS" >> $GITHUB_OUTPUT
          echo "repo1_forks=$REPO1_FORKS" >> $GITHUB_OUTPUT
          echo "repo1_lang=$REPO1_LANG" >> $GITHUB_OUTPUT
          echo "repo2_name=$REPO2_NAME" >> $GITHUB_OUTPUT
          echo "repo2_stars=$REPO2_STARS" >> $GITHUB_OUTPUT
          echo "repo2_forks=$REPO2_FORKS" >> $GITHUB_OUTPUT
          echo "repo2_lang=$REPO2_LANG" >> $GITHUB_OUTPUT

      - name: 🎨 Gerar Cartão SVG Compacto
        run: |
          mkdir -p cards
          DATE=$(date +'%d/%m/%Y')

          # Variáveis
          AVATAR_URL="${{ steps.fetch-data.outputs.avatar }}"
          USER_NAME="${{ steps.fetch-data.outputs.name }}"
          USER_LOGIN="${{ steps.fetch-data.outputs.login }}"
          USER_LEVEL="${{ steps.fetch-data.outputs.level }}"
          USER_RANK="${{ steps.fetch-data.outputs.rank }}"
          XP_PERCENTAGE="${{ steps.fetch-data.outputs.xp_percentage }}"
          TOTAL_XP="${{ steps.fetch-data.outputs.total_xp }}"
          LEVEL_MAX="${{ steps.fetch-data.outputs.level_max }}"

          # Projetos
          REPO1_NAME="${{ steps.fetch-data.outputs.repo1_name }}"
          REPO1_STARS="${{ steps.fetch-data.outputs.repo1_stars }}"
          REPO1_LANG="${{ steps.fetch-data.outputs.repo1_lang }}"

          REPO2_NAME="${{ steps.fetch-data.outputs.repo2_name }}"
          REPO2_STARS="${{ steps.fetch-data.outputs.repo2_stars }}"
          REPO2_LANG="${{ steps.fetch-data.outputs.repo2_lang }}"

          # Estatísticas
          REPOS_COUNT="${{ steps.fetch-data.outputs.repos }}"
          FOLLOWERS_COUNT="${{ steps.fetch-data.outputs.followers }}"
          COMMITS_COUNT="${{ steps.fetch-data.outputs.commits }}"

          # Calcular largura da barra
          BAR_WIDTH=$((XP_PERCENTAGE * 3))

          cat > cards/${{ env.USERNAME }}-compact.svg << 'EOF'
          <svg xmlns="http://www.w3.org/2000/svg" width="450" height="220" viewBox="0 0 450 220">
            <defs>
              <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="#1a1a2e"/>
                <stop offset="100%" stop-color="#16213e"/>
              </linearGradient>
              <linearGradient id="xpGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="#667eea"/>
                <stop offset="100%" stop-color="#764ba2"/>
              </linearGradient>
              <clipPath id="avatarClip">
                <circle cx="35" cy="35" r="30"/>
              </clipPath>
            </defs>

            <!-- Fundo -->
            <rect width="450" height="220" rx="12" fill="url(#bgGradient)"/>
            
            <!-- Avatar -->
            <image href="${AVATAR_URL}" x="10" y="10" width="70" height="70" clip-path="url(#avatarClip)"/>

            <!-- Informações principais -->
            <text x="90" y="30" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#ffffff">
              ${USER_NAME}
            </text>
            <text x="90" y="50" font-family="Arial, sans-serif" font-size="12" fill="#e2e8f0">
              @${USER_LOGIN}
            </text>
            
            <!-- Nível e Rank -->
            <text x="90" y="70" font-family="Arial, sans-serif" font-size="11" fill="#ffd700">
              ${USER_RANK} • Nível ${USER_LEVEL}
            </text>

            <!-- Barra de XP -->
            <g transform="translate(15, 90)">
              <text x="0" y="0" font-family="Arial, sans-serif" font-size="10" fill="#e2e8f0">
                XP: ${TOTAL_XP}/${LEVEL_MAX}
              </text>
              <rect x="0" y="8" width="420" height="12" rx="6" fill="#2d3748"/>
              <rect x="0" y="8" width="${BAR_WIDTH}" height="12" rx="6" fill="url(#xpGradient)"/>
              <text x="210" y="17" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#ffffff" font-weight="bold">
                ${XP_PERCENTAGE}%
              </text>
            </g>

            <!-- Estatísticas rápidas -->
            <g transform="translate(15, 120)">
              <rect width="420" height="30" rx="8" fill="rgba(255,255,255,0.05)"/>
              
              <text x="30" y="12" font-family="Arial, sans-serif" font-size="9" fill="#48bb78">
                📦 ${REPOS_COUNT}
              </text>
              <text x="30" y="24" font-family="Arial, sans-serif" font-size="8" fill="#a0aec0">
                Repos
              </text>

              <text x="120" y="12" font-family="Arial, sans-serif" font-size="9" fill="#4299e1">
                👥 ${FOLLOWERS_COUNT}
              </text>
              <text x="120" y="24" font-family="Arial, sans-serif" font-size="8" fill="#a0aec0">
                Seguidores
              </text>

              <text x="210" y="12" font-family="Arial, sans-serif" font-size="9" fill="#ed8936">
                💾 ${COMMITS_COUNT}
              </text>
              <text x="210" y="24" font-family="Arial, sans-serif" font-size="8" fill="#a0aec0">
                Commits
              </text>

              <text x="300" y="12" font-family="Arial, sans-serif" font-size="9" fill="#9f7aea">
                ⭐ $((REPO1_STARS + REPO2_STARS))
              </text>
              <text x="300" y="24" font-family="Arial, sans-serif" font-size="8" fill="#a0aec0">
                Stars
              </text>
            </g>

            <!-- Projetos destacados -->
            <g transform="translate(15, 160)">
              <text x="0" y="0" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#ffffff">
                🚀 Projetos Top
              </text>

              <!-- Projeto 1 -->
              <g transform="translate(0, 15)">
                <rect width="205" height="35" rx="6" fill="rgba(255,255,255,0.03)"/>
                <text x="8" y="12" font-family="Arial, sans-serif" font-size="9" font-weight="bold" fill="#ffffff">
                  ${REPO1_NAME}
                </text>
                <text x="8" y="25" font-family="Arial, sans-serif" font-size="8" fill="#a0aec0">
                  ${REPO1_LANG} • ⭐${REPO1_STARS}
                </text>
              </g>

              <!-- Projeto 2 -->
              <g transform="translate(215, 15)">
                <rect width="205" height="35" rx="6" fill="rgba(255,255,255,0.03)"/>
                <text x="8" y="12" font-family="Arial, sans-serif" font-size="9" font-weight="bold" fill="#ffffff">
                  ${REPO2_NAME}
                </text>
                <text x="8" y="25" font-family="Arial, sans-serif" font-size="8" fill="#a0aec0">
                  ${REPO2_LANG} • ⭐${REPO2_STARS}
                </text>
              </g>
            </g>

            <!-- Footer -->
            <text x="225" y="210" text-anchor="middle" font-family="Arial, sans-serif" font-size="8" fill="#718096">
              🏢 INSS • Fullstack • ${DATE} • guild.workflow
            </text>
          </svg>
          EOF

          echo "✅ Cartão compacto gerado: cards/${{ env.USERNAME }}-compact.svg"


      - name: 💾 Salvar artefatos
        uses: actions/upload-artifact@v4
        with:
          name: guild-cards-compact
          path: cards/
          retention-days: 7

      - name: 📝 Commit das mudanças
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add cards/
          if git diff --staged --quiet; then
            echo "ℹ️ Nenhuma mudança para commitar"
          else
            git commit -m "🎨 Cartão compacto para ${{ env.USERNAME }}"
            git push
            echo "✅ Mudanças commitadas"
          fi
